"use strict";var Nav=angular.module("Nav",[]),Main=angular.module("Main",["ui.router","ngAnimate","mm.foundation","ngSanitize","LocalStorageModule","Nav"]);
Main.config(["$stateProvider","$urlRouterProvider","$httpProvider","localStorageServiceProvider",function($stateProvider,$urlRouterProvider,$httpProvider,localStorageServiceProvider){$stateProvider.state("home",{url:"",templateUrl:"components/home/_index.html"}),$stateProvider.state("profile",{url:"/profile",templateUrl:"components/auth/profile/_index.html",controller:"ProfileCtrl as myProfile"}),$stateProvider.state("friends",{url:"/friends",templateUrl:"components/friends/_index.html",controller:"FriendsCtrl as myFriends",resolve:{friendsPromise:function(friendsFactory){return friendsFactory.ensureFriends()}}}).state("rewards",{url:"/rewards",templateUrl:"components/rewards/_index.html",controller:"RewardsCtrl as myRewards",resolve:{rewardsPromise:function(rewardsFactory){return rewardsFactory.ensureRewards()}}}).state("trip",{url:"/trip",templateUrl:"components/trip/_index.html",controller:"TripCtrl as myTrip"}).state("login",{url:"/login",templateUrl:"components/auth/login/_index.html",controller:"LoginCtrl as loginCtrl"}).state("register",{url:"/register",templateUrl:"components/auth/register/_index.html",controller:"RegisterCtrl as registerCtrl"}).state("page-not-found",{url:"/page-not-found",templateUrl:"error.html"}),$urlRouterProvider.otherwise("/page-not-found"),$httpProvider.interceptors.push("AuthInterceptor"),localStorageServiceProvider.setPrefix("Main").setStorageType("sessionStorage").setNotify(!0,!0)}]);
Main.controller("LoginCtrl",["Auth","$state","$scope",function(Auth,$state,$scope){var vm=this;vm.errors=[],vm.login=function(){$scope.loginForm.$valid&&(vm.errors=[],Auth.login(vm.user).success(function(){$state.go("profile")}).error(function(err){vm.errors.push(err)}))}}]);
Main.controller("ProfileCtrl",["profileFactory",function(profileFactory){this.test="Hello World!",this.profile=profileFactory,this.updateProfile=profileFactory.updateProfile}]);
function profileFactory(localStorageService){var profile={name:localStorageService.get("name"),email:localStorageService.get("email"),points:localStorageService.get("points"),avatar:localStorageService.get("avatar"),id:localStorageService.get("id")};return profile}
Main.controller("RegisterCtrl",["Auth","$state","$scope",function(Auth,$state,$scope){var vm=this;vm.errors=[],vm.register=function(){$scope.registerForm.$valid&&Auth.register(vm.user).then(function(){$state.go("posts.list")},function(err){vm.errors.push(err)})},vm.validatePassword=function(){}}]);
function AuthInterceptor($q,$injector){return{request:function(config){var token,localStorageService=$injector.get("localStorageService");return localStorageService.get("auth_token")&&(token=localStorageService.get("auth_token")),token&&(config.headers.Authorization="Bearer "+token),config},responseError:function(response){var localStorageService=$injector.get("LocalService");return 401!==response.status&&403!==response.status||(localStorageService.unset("auth_token"),$injector.get("$state").go("login")),$q.reject(response)}}}
function Auth($http,localStorageService,$rootScope){var API_URL="https://driveoff.herokuapp.com";return{isAuthenticated:function(){return localStorageService.get("auth_token")},login:function(credentials){var login=$http.post(API_URL+"/login",credentials);return login.success(function(result){localStorageService.set("auth_token",result.token);var user={id:result.id,name:result.name,avatar:result.avatar,points:result.points,email:result.email};localStorageService.set("user",JSON.stringify(user))}),login},logout:function(){localStorageService.unset("auth_token"),localStorageService.unset("user")},register:function(formData){localStorageService.unset("auth_token");var register=$http.post(API_URL+"/users",formData);return register.success(function(result){localStorageService.set("auth_token",result.token)}),register}}}
function findFriendsFactory($http,$q){var me={friends:[]},getURL="www.google.com";return me.findFriends=function(searchParams){return $http.get(getURL+searchParams).success(function(data){data.error||(me.friends=data)})},me}
Main.controller("FriendsCtrl",["friendsPromise","findFriendsFactory",function(friendsPromise,findFriendsFactory){this.test="Hello World!",this.friends=friendsPromise.data,this.findFriends=findFriendsFactory.findFriends,this.pointsAll=!1,this.points="points_all_time",this.togglePoints=function(){this.pointsAll=!this.pointsAll,"points_all_time"==this.points?this.points="points_this_week":this.points="points_all_time"}}]);
function friendsFactory($http,$q){var me={friends:[]},getURL="data/friends.json";return me.ensureFriends=function(){return 0==me.friends.length?me.fetchFriends():$q.when(me.friends)},me.fetchFriends=function(){return $http.get(getURL).success(function(data){data.error||(me.friends=data)})},me}
Nav.controller("NavCtrl",["$location","$scope","profileFactory",function($location,$scope,profileFactory){this.page=$location.path()}]);
Main.controller("RewardsCtrl",["rewardsPromise","rewardsFactory",function(rewardsPromise,rewardsFactory){this.test="Hello World!",this.rewards=rewardsPromise.data,this.chooseReward=rewardsFactory.chooseReward}]);
function rewardsFactory($http,$q,$filter){var me={rewards:[]},getURL="data/rewards.json",points=400;return me.ensureRewards=function(){return 0==me.rewards.length?me.fetchRewards():$q.when(me.rewards)},me.fetchRewards=function(){return $http.get(getURL).success(function(data){data.error||(me.rewards=data)})},me.chooseReward=function(id){var reward=$filter("filter")(me.rewards,function(obj){return obj.id===id})[0];me.rewards=me.rewards.splice(id,1),points-=reward.points},me}
function calculateDistanceFactory(){var dist={},RADIUS=6371,toRad=function(n){return n*Math.PI/180};return dist.getDistance=function(latitude,longitude,latitude2,longitude2){var fromLat=latitude,fromLon=longitude,toLat=latitude2,toLon=longitude2,dLat=toRad(toLat-fromLat),dLon=toRad(toLon-fromLon),fromLat=toRad(fromLat),toLat=toRad(toLat),a=Math.pow(Math.sin(dLat/2),2)+Math.pow(Math.sin(dLon/2),2)*Math.cos(fromLat)*Math.cos(toLat),c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return RADIUS*c},dist.measurePath=function(points){return points.reduce(function(memo,point){var distance=null===memo.lastPoint?0:getDistance(memo.lastPoint,point);return{lastPoint:point,distance:distance+memo.distance}},{lastPoint:null,distance:0}).distance},dist}
function coordFactory(){var factory={positions:[]},success=function(position){var latitude=position.coords.latitude,longitude=position.coords.longitude,timestamp=position.coords.timestamp;factory.positions.push({latitude:latitude,longitude:longitude,timestamp:timestamp})},error=function(){console.log="Unable to retrieve your location"};return factory.getAllCoordinates=function(){return factory.positions},factory.getCurrentPosition=function(callback){navigator.geolocation.getCurrentPosition(success,error,callback)},factory}
Main.controller("TripCtrl",["tripFactory",function(tripFactory){this.test="Hello World!",this.endTrip=tripFactory.endTrip,this.beginTrip=tripFactory.beginTrip,this.checkLocation=tripFactory.checkLocation,this.sleep=tripFactory.sleep}]);
function tripFactory($http,$q,coordFactory,calculateDistanceFactory,profileFactory){var trip={miles:0,minutes:0,startTime:0,endTime:0,posted:!1,user_id:0},postTripURL="https://driveoff.herokuapp.com/trips",getCurrentTime=function(){var d=new Date;return d.getTime()},processTrip=function(){var positions=coordFactory.getAllCoordinates();console.log(positions);for(var len=positions.length,i=1;i<len;i++)trip.miles+=calculateDistanceFactory.getDistance(positions[i-1].latitude,positions[i-1].longitude,positions[i].latitude,positions[i].longitude);return console.log(trip.miles),trip.minutes=(trip.endTime-trip.startTime)/6e4,console.log(trip.minutes),trip.user_id=profileFactory.id,console.log(trip.user_id),console.log(positions),$http.post(postTripURL,trip).success(function(data){data.error||(trip.posted=!0)})};return trip.checkLocation=function(){coordFactory.getCurrentPosition(function(){})},trip.endTrip=function(){trip.endTime=getCurrentTime(),trip.checkLocation(function(){}),processTrip()},trip.beginTrip=function(){trip.startTime=getCurrentTime(),trip.checkLocation()},trip.sleep=function(){return setTimeout(function(){},3e3)},trip}
Main.factory("AuthInterceptor",AuthInterceptor),Main.factory("Auth",Auth),Main.factory("friendsFactory",friendsFactory),Main.factory("findFriendsFactory",findFriendsFactory),Main.factory("rewardsFactory",rewardsFactory),Main.factory("coordFactory",coordFactory),Main.factory("calculateDistanceFactory",calculateDistanceFactory),Main.factory("tripFactory",tripFactory),Main.factory("profileFactory",profileFactory);